external interface Serializable {}

class ClimbSafe {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 1L;
  /*
  * This method to reinitialize static values
  * of this Class 
  *
  *@author AbdelrahmanAli
  */
  public void reinitialize() {

	List<BookableItem> items = new ArrayList<>();
   	items.addAll(this.getEquipment());
   	items.addAll(this.getBundles());

   	User.reinitializeUniqueEmail(this.getAdministrator(), this.getGuides(), this.getMembers());
  	BookableItem.reinitializeName(items);
  	Hotel.reinitializeName(this.getHotels());
  }

}

class User {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 2L;

	/*
 	 * This method to reinitialize static values
 	 * of this Class 
 	 *
  	*@author AbdelrahmanAli
  	*/
  public static void reinitializeUniqueEmail(Administrator admin, List<Guide> guides, List<Member> members) {
    usersByEmail = new HashMap<String, User>();
    if(admin !=null)
    usersByEmail.put(admin.getEmail(), admin);
    for (Guide guide : guides) {
      usersByEmail.put(guide.getEmail(), guide);
    }
    for (Member member : members) {
      usersByEmail.put(member.getEmail(), member);
    }
  }
}

class Administrator {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 3L;
}

class NamedUser {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 4L;
}

class Guide {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 5L;
}

class Member {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 6L;
}

// persistence for BookedItem needs to be specified in ClimbSafe.ump
// due to a bug in Umple (association classes cannot be defined in two files)

class BookableItem {
 depend java.io.Serializable;
   isA Serializable;
  private static final long serialVersionUID = 7L;

 	 /*
 	 * This method to reinitialize static values
 	 * of this Class 
 	 *
  	*@author AbdelrahmanAli
  	*/
   public static  void reinitializeName(List<BookableItem> bookableItems){
	   bookableitemsByName = new HashMap<String, BookableItem>();
	   for (BookableItem bookableItem : bookableItems) {
		   bookableitemsByName.put(bookableItem.getName(), bookableItem);
	   }
  }

}

class Equipment {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 8L;
}

class EquipmentBundle {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 9L;
}

class Hotel {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 10L;

  	/*
  	* This method to reinitialize static values
  	* of this Class 
  	*
 	 *@author AbdelrahmanAli
 	 */
    public static  void reinitializeName(List<Hotel> hotels){
	   hotelsByName = new HashMap<String, Hotel>();
	    for (Hotel hotel : hotels) {
	    	hotelsByName.put(hotel.getName(), hotel);
	    }
  }

}

class Assignment {
  depend java.io.Serializable;
  isA Serializable;
  private static final long serialVersionUID = 11L;

}
